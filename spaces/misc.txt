void setSpace(struct Space* space){
    for (int i = 0; i <= NBODIES; i++) {
        space->bodies[i] = malloc(sizeof(struct Body));
        space->bodies[i]->x = cos(i * 2 * 3.142 / NBODIES) * WIDTH * 0.4 + WIDTH / 2;
        space->bodies[i]->y = sin(i * 2 * 3.142 / NBODIES) * HEIGHT * 0.4 + HEIGHT / 2;
        space->bodies[i]->mass = 5e6;
        space->bodies[i]->vx = -(space->bodies[i]->y - HEIGHT / 2) * 4;
        space->bodies[i]->vy = (space->bodies[i]->x - WIDTH / 2) * 4;
        space->bodies[i]->radius = (3. / 4.) / 3.142 * pow(10e3, 1. / 3.);
    }
    space->ship = malloc(sizeof(struct Ship));
    space->ship->exists=0;
}


void setSpaceReal(struct Space* space){
    // define earth
    struct Body earth;
    earth.x = WIDTH / 2;
    earth.y = HEIGHT / 2;
    earth.vx = 0;
    earth.vy = 0;
    earth.mass = 1e4;
    earth.radius = (3. / 4.) / 3.142 * pow(earth.mass, 1. / 3.);
    space->bodies[0] = earth;

    // define moon
    struct Body moon;
    moon.x = WIDTH / 2;
    moon.y = HEIGHT / 8;
    moon.vx = -100;
    moon.vy = 0;
    moon.mass = 0.012 * earth.mass;
    moon.radius = (3. / 4.) / 3.142 * pow(moon.mass, 1. / 3.);
    space->bodies[1] = moon;

    // define ship
    struct Body body;
    body.x = earth.x + 50;
    body.y = earth.y;
    body.vx = 0;
    body.vy = -400;
    body.mass = 0;
    body.radius = moon.radius / 2;

    ship.ax = 0;
    ship.ay = 0;
    ship.exists = 1;
    ship.body = body;

    space->ship = ship;
}
